---
- name: Setup Minecraft Server
  hosts: mcservers
  vars:
    git_repo: "{{ ansible.git_repo }}"
    deploy_key_path: "{{ ansible.deploy_key_path }}"
    mcbasedir: "{{ ansible.mcbasedir }}"
  become: true
  gather_facts: false
  tasks:
    - name: Do setup
      ansible.builtin.setup:
      become: false

    {% if ansible.timezone -%}
    - name: Set timezone to {{ ansible.timezone }}
      community.general.timezone:
        name: {{ ansible.timezone }}
    {% endif %}

    {% if ansible.install_docker -%}
    - name: Install curl and ca-certificates
      ansible.builtin.apt:
        name:
          - curl
          - ca-certificates
        state: present
        update_cache: yes

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/docker.gpg

    - name: Add Docker GPG key
      ansible.builtin.command: gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg /tmp/docker.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Update apt and install Docker packages
      ansible.builtin.apt:
        name:
          - python3-pip
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
          - docker-compose
          - git
          - python3-docker
          - vim
        state: present
        update_cache: yes

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Reset ssh connection to allow user changes to affect ansible user
      ansible.builtin.meta:
        reset_connection
    {% endif %}

    - name: Copy deploy key
      become: false
      ansible.builtin.copy:
        src: "{{ ansible.deploy_key_path | basename }}"
        dest: "{{ ansible.deploy_key_path }}"
        mode: '0600'
      when: ansible.deploy_key_path is defined

    - name: Clone repository
      become: false
      ansible.builtin.git:
        repo: "{{ git_repo }}"
        dest: "{{ mcbasedir }}"
        version: main
        {% if ansible.deploy_key_path is defined -%}
        key_file: "{{ ansible.deploy_key_path }}"
        {% endif -%}
        accept_hostkey: yes

    - name: Create directories
      become: false
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ mcbasedir }}"
        - "{{ mcbasedir }}/{{ paths.data_dir }}"
        - "{{ mcbasedir }}/{{ paths.logs_dir }}"
        - "{{ mcbasedir }}/{{ paths.config_dir }}"

    {% if minecraft.enable_vanillatweaks and minecraft.vanillatweaks_files -%}
    - name: Copy vanilla tweaks files from repository
      become: false
      ansible.builtin.copy:
        src: "{{ mcbasedir }}/{{ item }}"
        dest: "{{ mcbasedir }}/{{ paths.config_dir }}/{{ item }}"
        mode: '0644'
        remote_src: true
      with_items:
        {% for file in minecraft.vanillatweaks_files -%}
        - {{ file }}
        {% endfor %}
    {% endif %}

    - name: Start Minecraft server
      become: false
      community.docker.docker_compose:
        project_src: "{{ mcbasedir }}"